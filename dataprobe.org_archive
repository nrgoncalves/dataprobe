#    -*- mode: org -*-


Archived entries from file /home/nrg/dataprobe/dataprobe.org


* DONE Format constraints
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-01-24 Thu 14:23
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:
e.g. ensure field adheres to format 'LNNNNL'

* DONE modify match to compile regexp if specified in input
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-01-24 Thu 14:23
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:

* DONE Match, Contains, Startswith forward pandas-like args
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-01-24 Thu 14:25
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:

* DONE why is the summary not displaying aa a pandas df?
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-01-24 Thu 14:25
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:

* DONE change probe class such that data is provided with .run(_) as opposed to probe instantiation
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-01-24 Thu 14:25
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:

* DONE add initial testing
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-01-25 Fri 15:26
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:

* DONE does it make sense to have a __state attribute in Constraints
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-01-25 Fri 18:18
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:
I am not sure: in a way, I think this should not be bound to Constraints
I see constraints (and probes) as being a stateless thing that we can share with others
So, I would argue that we would need to introduce another class, namely Test or so, that would
store all the information related to the application of a probe/constraints to a particular dataset.

* DONE Remove setters in DataTest? I would like that to be immutable.
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-02-01 Fri 15:44
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:

* DONE Return more information on violated constraints (e.g. percentage of data violating the constraint)
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-02-01 Fri 15:44
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:

* DONE Should provide some metrics, e.g. about 90% of your data does not agree with bla bla constraints 
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-02-01 Fri 15:45
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:

* TODO data tests coverage
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-02-01 Fri 15:45
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: TODO
  :END:
This is about telling the user the percentage of the dataframe that has been tested

* DONE DataTest class should store some basic information about the data that has been processed
  :PROPERTIES:
  :ARCHIVE_TIME: 2019-02-01 Fri 16:37
  :ARCHIVE_FILE: ~/dataprobe/dataprobe.org
  :ARCHIVE_OLPATH: Todo
  :ARCHIVE_CATEGORY: dataprobe
  :ARCHIVE_TODO: DONE
  :END:
I should probably get a hash for the data and store some metadata about the dataframe.
should that hash be store in DataProbe as well?
